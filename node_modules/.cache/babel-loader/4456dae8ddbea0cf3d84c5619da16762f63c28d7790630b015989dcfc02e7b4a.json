{"ast":null,"code":"var _jsxFileName = \"/Users/alboom/Desktop/Projects/weather-report/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport './app.css';\nimport MainWeatherCard from './components/MainCard';\nimport WeekWeatherCard from './components/WeekCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mainCardData, setMainCardData] = useState(null);\n  const [country, setCountry] = useState('');\n  const [city, setCity] = useState('');\n  const [weatherData, setWeatherData] = useState(null);\n  const [coordsLoaded, setCoordsLoaded] = useState(false);\n  const [coords, setCoords] = useState({});\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      setCoords({\n        latitude: position.coords.latitude,\n        longitude: position.coords.longitude\n      });\n      setCoordsLoaded(true);\n    });\n  }, [coordsLoaded]);\n  useEffect(() => {\n    if (Object.keys(coords).length !== 0) {\n      fetchData();\n    }\n  }, [coords]);\n  async function fetchData() {\n    let latitude = coords.latitude;\n    let longitude = coords.longitude;\n    const initialResponse = await fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${latitude}&lon=${longitude}&exclude=hourly,daily&appid=ddbe22c4ca49e54f138a28fc1067af55&lang=pt_br&units=metric`);\n    const response = await initialResponse.json();\n    setWeatherData(response.list);\n    setMainCardData(response.list[0]);\n    setCity(response.city.name);\n    setCountry(response.county);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-card-wrapper\",\n      children: mainCardData && /*#__PURE__*/_jsxDEV(MainWeatherCard, {\n        maxTemperature: mainCardData.main.temp_max,\n        minTemperature: mainCardData.main.temp_min,\n        cityName: city,\n        county: country,\n        icon: mainCardData.weather[0].icon,\n        description: mainCardData.weather[0].description,\n        date: mainCardData.dt_txt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-card-wrapper\",\n      children: weatherData && weatherData.map((day, index) => /*#__PURE__*/_jsxDEV(WeekWeatherCard, {\n        maxTemperature: day.main.temp_max,\n        minTemperature: day.main.temp_min,\n        humidity: day.main.humidity,\n        icon: day.weather[0].icon,\n        date: day.dt_txt\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qWTN97LOBj6TPW7E0ZN7ZU51268=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","MainWeatherCard","WeekWeatherCard","App","mainCardData","setMainCardData","country","setCountry","city","setCity","weatherData","setWeatherData","coordsLoaded","setCoordsLoaded","coords","setCoords","navigator","geolocation","getCurrentPosition","position","latitude","longitude","Object","keys","length","fetchData","initialResponse","fetch","response","json","list","name","county","main","temp_max","temp_min","weather","icon","description","dt_txt","map","day","index","humidity"],"sources":["/Users/alboom/Desktop/Projects/weather-report/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport './app.css';\nimport MainWeatherCard from './components/MainCard';\nimport WeekWeatherCard from './components/WeekCard';\n\nfunction App() {\n  const [mainCardData, setMainCardData] = useState(null)\n  const [country, setCountry] = useState('')\n  const [city, setCity] = useState('')\n  const [weatherData, setWeatherData] = useState(null)\n  const [coordsLoaded, setCoordsLoaded] = useState(false)\n  const [coords, setCoords] = useState({})\n  \n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      setCoords({ latitude: position.coords.latitude, longitude: position.coords.longitude })\n      setCoordsLoaded(true)\n    })\n  }, [coordsLoaded])\n\n  useEffect(() => {\n    if(Object.keys(coords).length !== 0) {\n      fetchData()\n    }\n  }, [coords])\n  \n  async function fetchData() {\n    let latitude = coords.latitude\n    let longitude = coords.longitude\n    const initialResponse = await fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${latitude}&lon=${longitude}&exclude=hourly,daily&appid=ddbe22c4ca49e54f138a28fc1067af55&lang=pt_br&units=metric`)\n    const response = await initialResponse.json()\n    setWeatherData(response.list)\n    setMainCardData(response.list[0])\n    setCity(response.city.name)\n    setCountry(response.county)\n  }\n  return (\n    <div className='wrapper'>\n      {/* lembrar que API está enviando previsões apenas de 3 em 3 horas */}\n      <div className='main-card-wrapper'>\n        {mainCardData && (\n          <MainWeatherCard \n          maxTemperature={mainCardData.main.temp_max} \n          minTemperature={mainCardData.main.temp_min} \n          cityName={city}\n          county={country}\n          icon={mainCardData.weather[0].icon}\n          description={mainCardData.weather[0].description}\n          date={mainCardData.dt_txt}\n          />\n        )}\n      </div>\n      <div className='main-card-wrapper'>\n        {weatherData && weatherData.map((day, index) => (\n          <WeekWeatherCard \n          key={index} \n          maxTemperature={day.main.temp_max} \n          minTemperature={day.main.temp_min} \n          humidity={day.main.humidity} \n          icon={day.weather[0].icon}\n          date={day.dt_txt}\n          />\n        ))}\n      </div>\n    </div>\n\n  )\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}